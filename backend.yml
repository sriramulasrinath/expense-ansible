- name: configure backend server 
  become: yes
  hosts: backend
  vars:
    login_host: 
  vars_prompt:
  - name: mysql_root_password
    prompt: please enter MySQL root password 
    private: no
  tasks:
    - name: disable default node js
      ansible.builtin.command: dnf module disable nodejs -y
    
    - name: enable node js
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs 
      ansible.builtin.dnf: 
        name: "{{ item }}"
        state: installed 
      loop: 
        - nodejs
        - mysql 
    
    - name: create  the user 
      ansible.builtin.user:
        name: expense 
        user: root 

    - name: create app directory
      ansible.builtin.file:
        path: /app
        user: root 
        state: directory
    
    - name: download the code 
      ansible.builtin.get_url: 
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest : /tmp/backend.zip 
        
    - name: unzip the code 
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    - name: install npm dependencies
      ansible.builtin.command: npm install 
      args: 
        chdir: /app 
    
    - name: copy backend service 
      ansible.builtin.copy:
        src: backend.service 
        dest: /etc/systemd/system/backend.service

    - name: install python mysql dependencies 
      ansible.builtin.pip:
        name:
        - PyMysql 
        - cryptography 
        executable: pip3.9 
    
    - name: import the data into mysql 
      community.mysql.mysql_info:
        login_user: root 
        login_password: "{{ mysql_root_password }}"
        login_host: "{{ login_host }}
      







